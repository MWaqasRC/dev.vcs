{"version":3,"file":"src_app_pages_meeting_meeting_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAE+H;AAE9F;;;;;;;ICoBN,sEAAqE;IAAA,sFAErE;IAAA,4DAAM;;;IAHT,0EAAqF;IAClF,0HAEM;IACT,4DAAM;;;IAHG,0DAA6D;IAA7D,uIAA6D;;;IAkBnE,sEAA4E;IAAA,oFAChE;IAAA,4DAAM;;;IAClB,sEAA+E;IAC5E,yFACH;IAAA,4DAAM;;;IALT,0EAA4F;IACzF,0HACkB;IAClB,0HAEM;IACT,4DAAM;;;IALG,0DAAoE;IAApE,8IAAoE;IAEpE,0DAAuE;IAAvE,iJAAuE;;;IAoCjE,uEAAwD;IAAA,kFAE5C;IAAA,4DAAO;;;IAHtB,0EAAoF;IACjF,iIAEmB;IACtB,4DAAM;;;IAHI,0DAA+C;IAA/C,8GAA+C;;;IAUtD,uEAAuD;IAAA,iFAE3C;IAAA,4DAAO;;;IAHtB,0EAAmF;IAChF,iIAEmB;IACtB,4DAAM;;;IAHI,0DAA8C;IAA9C,6GAA8C;;;IASrD,uEAAkD;IAAA,8EAAmB;IAAA,4DAAO;;;IAD/E,0EAA+E;IAC5E,iIAA4E;IAC/E,4DAAM;;;IADI,0DAAyC;IAAzC,wGAAyC;;;IAShD,uEAAmD;IAAA,oFACvC;IAAA,4DAAO;;;IAFtB,0EAA+E;IAC5E,kIACmB;IAGtB,4DAAM;;;IAJI,0DAA0C;IAA1C,yGAA0C;;;;IAOjD,wEAEkB;IADf,yXAAS,wBAAY,IAAC;IAEtB,mEAAuD;IAC1D,4DAAI;;;;IA7Cb,yEAAqF;IAE/E,uEAE+E;IAC/E,yHAIM;IACT,4DAAK;IACL,qEAAI;IACD,uEAE8E;IAC9E,yHAIM;IACT,4DAAK;IACL,qEAAI;IACD,uEAC0E;IAC1E,yHAEM;IAET,4DAAK;IACL,sEAAI;IACD,wEAE0E;IAC1E,2HAKM;IACT,4DAAK;IACL,sEAAI;IACE,uHAII;IACV,4DAAK;;;;;IA9CyD,gFAAmB;IAI3E,0DAAyE;IAAzE,oMAAyE;IACtE,0DAAmD;IAAnD,yHAAmD;IAStD,0DAAwE;IAAxE,mMAAwE;IACrE,0DAAkD;IAAlD,wHAAkD;IAQrD,0DAAoE;IAApE,+LAAoE;IACjE,0DAA8C;IAA9C,oHAA8C;IAQjD,0DAAoE;IAApE,+LAAoE;IACjE,0DAA8C;IAA9C,oHAA8C;IAQ7C,0DAAyC;IAAzC,4GAAyC;;;IAe5D,wEAAiC;IAAA,iEAAM;IAAA,qEAAe;;;IACtD,mEAAqF;;ADrHtG,MAAM,sBAAsB;IAOhC,2DAA2D;IAE3D,YAAoB,WAAwB,EAAU,WAAuB,EAAU,MAAc,EAAS,QAAkB;QAA5G,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAU;QALhI,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,mCAAM,EAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAK9C,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,+DAAmB,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC;YAC1E,8CAA8C;YAC9C,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SAC9C,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,eAAe;QACZ,sCAAsC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAc,CAAC;QACrE,0DAA0D;QAC1D,yBAAyB;QACzB,+BAA+B;QAC/B,yBAAyB;QACzB,2CAA2C;QAC3C,wCAAwC;QACxC,0DAA0D;QAC1D,kCAAkC;QAClC,+BAA+B;QAC/B,4GAA4G;QAC5G,yGAAyG;QAEzG,4FAA4F;QAC5F,6EAA6E;QAC7E,oFAAoF;QACpF,oFAAoF;QACpF,gGAAgG;QAChG,uDAAuD;QAEvD,SAAS;QACT,QAAQ;IACX,CAAC;IAED,YAAY;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAC1B;YACG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACvC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,8DAAkB,CAAC,oDAAoD,CAAC,EAAE,+DAAmB,CAAC,CAAC;SAC9G,CACH;IACJ,CAAC;IAED,MAAM;QACH,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAc,CAAC;QACtE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,SAAS,CAAC,KAAa;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAc,CAAC;QACtE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,KAAgB;QACrB,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,KAAgB;QACrB,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,eAAe;QAChB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAc,CAAC;QACtE,OAAO,OAAO,CAAC;IAClB,CAAC;IAED,UAAU;QACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO;SACT;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,mCAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QACrG,yEAAyE;QACzE,wFAAwF;QACxF,iCAAiC;QAEjC,yFAAyF;QAEzF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACrC,CAAC,EAAE,GAAG,CAAC,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC;IACL,CAAC;;4FAzGS,sBAAsB;oHAAtB,sBAAsB;QCdnC,yEAA6B;QAIjB,kEAAkC;QACrC,4DAAS;QACT,wEAA8B;QAAA,uDAAwB;QAAA,4DAAK;QAIjE,yEAAiB;QAIsB,+FAAmC;QAAA,4DAAI;QAElE,4EAA0D;QAApD,mJAAY,gBAAY,IAAC;QAC5B,0EAAiB;QAEkB,iEAAK;QAAA,4DAAQ;QAC1C,wEACoE;QAEpE,qHAIM;QACT,4DAAM;QAEN,2EAAwB;QACQ,iEAAK;QAAA,4DAAQ;QAC1C,wEAAqF;QACxF,4DAAM;QAEN,2EAAwB;QACQ,wEAAY;QAAA,4DAAQ;QAGjD,4EAC6I;QAC7I,qHAMM;QACT,4DAAM;QAIT,2EAAyE;QACrD,sEAAU;QAAA,4DAAK;QAChC,8EAAwE;QAAnB,+IAAS,YAAQ,IAAC;QACpE,2EACH;QAAA,4DAAS;QAIZ,uEAAK;QAOc,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAGpB,6EAAwC;QACrC,qHA+CK;QAER,4DAAQ;QAKjB,2EAA6D;QAEvD,uIAAsD;QACtD,iHAAqF;QACxF,4DAAS;;QA9HS,0DAAwB;QAAxB,qFAAwB;QAUhB,0DAAyB;QAAzB,sFAAyB;QAIzC,0DAA0E;QAA1E,mMAA0E;QAG3E,0DAAoD;QAApD,wHAAoD;QAgBnD,0DAAiF;QAAjF,0MAAiF;QAElF,0DAA2D;QAA3D,+HAA2D;QAiCrC,2DAA8B;QAA9B,iGAA8B;QAwD3C,0DAAgB;QAAhB,gFAAgB;QAC3B,0DAAe;QAAf,+EAAe;;ADT3C,SAAS,aAAa;IACnB,OAAO,CAAC,OAAwB,EAA2B,EAAE;QAC1D,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,MAAM,IAAI,GAAG,mCAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,cAAc,CAAC,mCAAM,EAAE,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAClE,CAAC,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AEhI6C;AAEsE;AAGnF;AAGgD;AAC9B;;;;;;;;;;ICoE3B,mEAGgD;;;;IAF7C,6LAAsE;;;;IAOzE,wEACyC;IAAA,uEAAY;IAAA,4DAAI;;;IAAtD,2JAAqC;;;;IAExC,+EAG4D;;;;IAFzD,wKAAqF;;;;IASxF,wEAC4B;IAAzB,yXAAS,yBAAc,IAAC;IAAC,uEAAY;IAAA,4DAAI;;;;IAC5C,wEAC4B;IAAzB,yXAAS,yBAAc,IAAC;IAAC,uEAAY;IAAA,4DAAI;;;IAgBtC,0EAAmE;IAChB,wEAAa;IAAA,4DAAI;IACjE,wEAAwB;IAAA,uDAAoC;;IAAA,4DAAI;;;IAAxC,0DAAoC;IAApC,+JAAoC;;;IAgBzD,qEAA+D;IACxD,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAc;IAAA,4DAAK;;;IAHnB,0DAAmB;IAAnB,oFAAmB;IACnB,0DAAkB;IAAlB,mFAAkB;IAClB,0DAAc;IAAd,+EAAc;IACd,0DAAc;IAAd,+EAAc;;;IAK3B,sEAAyB;IACkC,gEAAK;IAAA,4DAAU;IACvE,wEAA6B;IAAA,uDAAuB;IAAA,4DAAI;;;IAA3B,0DAAuB;IAAvB,uFAAuB;;;IAnCnE,qEAA+B;IAMnB,gIAGM;IAEN,8EAAkD;IAAA,6EAAkB;IAAA,4DAAU;IAC9E,4EAAmC;IAItB,sEAAU;IAAA,4DAAK;IACnB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IAIpB,yEAAO;IACJ,gIAKK;IACR,4DAAQ;IAGX,kIAGM;IACT,4DAAM;;;IA/BG,0DAAsB;IAAtB,qFAAsB;IAkBD,2DAA2B;IAA3B,8FAA2B;IAShD,0DAAiB;IAAjB,gFAAiB;;;;;IA1FtC,wEAA0D;IAMjD,+EAAkF;IACrF,4DAAK;IACL,yEAAqD;IAClD,+EACgB;IACnB,4DAAK;IACL,yEAAqD;IAClD,+EACgB;;IACnB,4DAAK;IACL,yEAC2G;IACxG,gFAIqF;IACrF,wHAGgD;IAGnD,4DAAK;IACL,0EAAqD;IAClD,wHACyD;IAEzD,gJAG4D;IAE/D,4DAAK;IACL,0EAAuF;IAGjF,0aAAS,kCAA2B,IAAC;IAAC,4DAAI;IAC7C,wHAC4C;IAC5C,wHAC4C;IAE/C,4DAAK;IAQR,2HAwCK;IACR,4DAAQ;;;;;IA5FgB,0DAAsB;IAAtB,kFAAsB;IAGtB,0DAA6C;IAA7C,4GAA6C;IAI7C,0DAA6C;IAA7C,qKAA6C;IAMzD,0DACkK;IADlK,8RACkK;IAGjK,0DAAsB;IAAtB,qFAAsB;IAQtB,0DAAsD;IAAtD,+HAAsD;IAG1C,0DAAoD;IAApD,6HAAoD;IAUhE,0DAAuB;IAAvB,6FAAuB;IAEvB,0DAAwB;IAAxB,8FAAwB;IAW7B,0DAAwB;IAAxB,8FAAwB;;;IAqF7B,sEAA8E;IAAA,oFAElE;IAAA,4DAAM;;;IAClB,sEAAiF;IAC9E,yFACH;IAAA,4DAAM;;;IANT,0EAA8F;IAC3F,uIAEkB;IAClB,uIAEM;IACT,4DAAM;;;IANG,0DAAsE;IAAtE,kJAAsE;IAGtE,0DAAyE;IAAzE,qJAAyE;;;IAiBxF,wEAAiC;IAAA,iEAAM;IAAA,qEAAe;;;IACtD,mEAAqF;;;;;IAnC3F,0EAA0B;IACwB,uEAAY;IAAA,4DAAK;IAChE,6EAAkG;IAAvC,2RAAS,kBAAc,aAAa,CAAC,IAAC;IAAC,4DAAS;IAE9G,0EAAwB;IAKiB,4EAAiB;IAAA,4DAAQ;IACtD,4EAEqC;IACrC,kIAOM;IACT,4DAAM;IAEN,2EAAyB;IACO,iEAAK;IAAA,4DAAQ;IAC1C,2EACqD;IACxD,4DAAM;IAKf,2EAA0B;IACuB,2WAAS,gCAAoB,IAAC;IACzE,oJAAsD;IACtD,8HAAqF;IACxF,4DAAS;;;IA/BH,0DAA6B;IAA7B,6FAA6B;IAKnB,0DAAmF;IAAnF,iNAAmF;IAGpF,0DAA6D;IAA7D,uIAA6D;IAqB1D,0DAAgB;IAAhB,mFAAgB;IAC3B,0DAAe;IAAf,kFAAe;;ADxMrB,MAAM,oBAAoB;IAQ9B,YAAmB,OAAuB,EAAU,WAAwB,EAAU,WAAuB,EAAU,YAAsB;QAA1H,YAAO,GAAP,OAAO,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAJ7I,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,mCAAM,EAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAI3C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,QAAQ;QACL,0DAA0D;IAC7D,CAAC;IAED,MAAM,CAAC,EAAE,MAAM,EAAE,SAAS,EAAa;QACpC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,EAAE;gBAC7B,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;aACxB;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,CAAC;IAC1C,CAAC;IACD,WAAW,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,WAAW,CAAC,KAAK;QAEd,gCAAgC;QAChC,iDAAiD;QACjD,4BAA4B;QAC5B,IAAI;QAEJ,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAChD,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,IAAI,kBAAkB,GAAG,YAAY,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;QAClE,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;QAE7E,OAAO,kBAAkB,CAAC;QAE1B,oEAAoE;QACpE,qCAAqC;QACrC,6EAA6E;QAC7E,kFAAkF;QAClF,8DAA8D;IACjE,CAAC;IAED,eAAe,CAAC,GAAG;QAChB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,WAAW,CAAC,OAAO,EAAE,IAAI;QAEtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YAC7B,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,+DAAmB,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC;YACxE,KAAK,EAAE,CAAC,EAAE,CAAC;SACb,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC7F,OAAO,CAAC,GAAG,CAAC,gBAAgB,MAAM,EAAE,CAAC,CAAC;QAEzC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,aAAa,MAAM,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,aAAa,CAAC,KAAK;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO;SACT;QACD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,mCAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAE1G,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YAC1B,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC;IACL,CAAC;;wFAzFS,oBAAoB;kHAApB,oBAAoB;kEAMhB,+EAAsB;;;;qFARzB,CAAC,4DAAc,EAAE,wDAAW,CAAC;QCf3C,yEAA6B;QAIa,sEAAW;QAAA,4DAAK;QAC9C,yEAA8B;QAC3B,mEAEK;QACR,4DAAM;QAKf,yEAAsB;QAQ0B,qMAAgC;QAD3D,4DAC4D;QAC5D,oEAA4C;QAC/C,4DAAM;QAIf,2EAA4C;QAEtC,4EACH;QAAA,4DAAS;QAGf,2EAA4D;QAOM,6IAAQ,kBAAc,IAAC;QAAC,iEAAK;QAAA,4DAAK;QACxF,0EAA+E;QAAxB,6IAAQ,kBAAc,IAAC;QAAC,iEAAK;QAAA,4DAAK;QACzF,0EAAqF;QAAxB,6IAAQ,kBAAc,IAAC;QAAC,gFAErF;QAAA,4DAAK;QACL,0EAA+E;QAAxB,6IAAQ,kBAAc,IAAC;QAAC,mEAC/E;QAAA,4DAAK;QACL,0EAAqC;QAAA,qEACrC;QAAA,4DAAK;QAEL,iEAAS;QACZ,4DAAK;QAER,yHAkGQ;;QACX,4DAAQ;QAGX,2EAAuE;QAG9D,wDAIH;QAAA,4DAAM;QAGT,2EAAgC;QAE2C,kMAAuB;;QAE5F,4DAAiB;QAWnC,gNAuCc;;QAtMqC,2DAAgC;QAAhC,2FAAgC;QAgC3C,2DAAoB;QAApB,mJAAoB;QAyG1C,0DAIH;QAJG,sLAIH;QAKsC,0DAAiC;QAAjC,yJAAiC;;AD3DtF,SAAS,aAAa;IACnB,OAAO,CAAC,OAAwB,EAA2B,EAAE;QAC1D,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,MAAM,IAAI,GAAG,mCAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,cAAc,CAAC,mCAAM,EAAE,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAClE,CAAC,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;AEnHsE;;AAEvE,MAAM,MAAM,GAAqC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;AAgB/E,MAAM,sBAAsB;IAEhC;QAES,cAAS,GAAkB,EAAE,CAAC;QAC7B,SAAI,GAAG,IAAI,uDAAY,EAAa,CAAC;IAH/B,CAAC;IAKjB,MAAM;QACH,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACxE,CAAC;;4FAVS,sBAAsB;oHAAtB,sBAAsB;8IAAtB,YAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf2C;AACK;;;;AAiBrE,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE;IACpB,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,IAAI,CAAC,OAAc,EAAE,MAAc,EAAE,SAAiB;IAC5D,IAAI,SAAS,KAAK,EAAE,EAAE;QACnB,OAAO,OAAO,CAAC;KACjB;SAAM;QACJ,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC/B,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1C,OAAO,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC3C,CAAC,CAAC,CAAC;KACL;AACJ,CAAC;AAED,SAAS,OAAO,CAAC,OAAY,EAAE,IAAY,EAAE,IAAmB;IAC7D,OAAO,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;WAChD,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;WACxD,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;WACzD,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;WAC/D,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;AACrD,CAAC;AAMM,MAAM,cAAc;IAkBxB,YAAoB,IAAiB,EAAU,WAAuB;QAAlD,SAAI,GAAJ,IAAI,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAY;QAjB9D,cAAS,GAAG,IAAI,iDAAe,CAAU,IAAI,CAAC,CAAC;QAC/C,aAAQ,GAAG,IAAI,yCAAO,EAAQ,CAAC;QAC/B,cAAS,GAAG,IAAI,iDAAe,CAAQ,EAAE,CAAC,CAAC;QAC3C,YAAO,GAAG,IAAI,iDAAe,CAAS,CAAC,CAAC,CAAC;QACzC,WAAM,GAAU;YACrB,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,CAAC;SACjB,CAAC;QAEF,WAAM,GAAU,EAAE,CAAC;QAGhB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CACf,mDAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACpC,4DAAY,CAAC,GAAG,CAAC,EACjB,yDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAC/B,qDAAK,CAAC,GAAG,CAAC,EACV,mDAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACvC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACN,CAAC;IAEK,UAAU;;YACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvB,gBAAgB;oBAChB,4DAA4D;oBAC5D,0EAA0E;oBAC1E,IAAI;iBACN;gBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5B,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBACpD,OAAO,CAAC,GAAG,CAAC;gBACf,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;QAEN,CAAC;KAAA;IAED,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACxD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACpD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACxD,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACvC,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC/C,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACnD,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACnD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC/C,IAAI,YAAY,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAEvD,IAAI,IAAI,CAAC,IAAY,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAI,QAAQ,CAAC,QAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAI,UAAU,CAAC,UAAkB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,QAAQ,CAAC,QAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAI,YAAY,CAAC,YAAoB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,UAAU,CAAC,UAAkB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,UAAU,CAAC,UAAkB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,aAAa,CAAC,aAA4B,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;IAEzE,IAAI,CAAC,KAAqB;QAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAEO,OAAO;QACZ,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE9E,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;QAEhE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;QAE7B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;SACpC;QACD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtE,OAAO,wCAAE,CACN,EAAE,OAAO,EAAE,KAAK,EAAE,CACpB,CAAC;IACL,CAAC;;4EA7FS,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAHZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CoC;AACS;AACX;AACgD;AACjD;AACA;AACwB;AACvB;AAC6B;AACA;;;AAEpF,MAAM,MAAM,GAAW;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAoB,EAAE;IAC7C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,4FAAsB,EAAE;IACrD,sDAAsD;CACxD,CAAC;AAiBK,MAAM,aAAa;;0EAAb,aAAa;0GAAb,aAAa;+GAFZ,CAAC,qDAAQ,CAAC,YAXZ;YACN,yDAAY;YACZ,kEAAqB,CAAC,MAAM,CAAC;YAC7B,uDAAW;YACX,+DAAmB;YACnB,wEAAgB;YAChB,2EAAmB;YACnB,0EAAkB;YAClB,gEAAgB;YAChB,iEAAc;SAChB;mIAGS,aAAa,mBAdR,sFAAoB,EAAE,gEAAgB,EAAE,4FAAsB,EAAE,4FAAsB,aAElG,yDAAY,6DAEZ,uDAAW;QACX,+DAAmB;QACnB,wEAAgB;QAChB,2EAAmB;QACnB,0EAAkB;QAClB,gEAAgB;QAChB,iEAAc;;;;;;;;;;;;;;;;;;AC7BpB;AACA;AACA;AACO,SAASG,YAAT,CAAsBC,OAAtB,EAA+BC,SAAS,GAAGL,4DAA3C,EAA2D;AAC9D,SAAOC,mDAAO,CAAC,CAACK,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,QAAQ,GAAG,IAAf;;AACA,UAAMC,IAAI,GAAG,MAAM;AACf,UAAIH,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAACI,WAAX;AACAJ,QAAAA,UAAU,GAAG,IAAb;AACA,cAAMK,KAAK,GAAGJ,SAAd;AACAA,QAAAA,SAAS,GAAG,IAAZ;AACAF,QAAAA,UAAU,CAACO,IAAX,CAAgBD,KAAhB;AACH;AACJ,KARD;;AASA,aAASE,YAAT,GAAwB;AACpB,YAAMC,UAAU,GAAGN,QAAQ,GAAGN,OAA9B;AACA,YAAMa,GAAG,GAAGZ,SAAS,CAACY,GAAV,EAAZ;;AACA,UAAIA,GAAG,GAAGD,UAAV,EAAsB;AAClBR,QAAAA,UAAU,GAAG,KAAKU,QAAL,CAAcC,SAAd,EAAyBH,UAAU,GAAGC,GAAtC,CAAb;AACAV,QAAAA,UAAU,CAACa,GAAX,CAAeZ,UAAf;AACA;AACH;;AACDG,MAAAA,IAAI;AACP;;AACDL,IAAAA,MAAM,CAACe,SAAP,CAAiBnB,6EAAwB,CAACK,UAAD,EAAcM,KAAD,IAAW;AAC7DJ,MAAAA,SAAS,GAAGI,KAAZ;AACAH,MAAAA,QAAQ,GAAGL,SAAS,CAACY,GAAV,EAAX;;AACA,UAAI,CAACT,UAAL,EAAiB;AACbA,QAAAA,UAAU,GAAGH,SAAS,CAACa,QAAV,CAAmBH,YAAnB,EAAiCX,OAAjC,CAAb;AACAG,QAAAA,UAAU,CAACa,GAAX,CAAeZ,UAAf;AACH;AACJ,KAPwC,EAOtC,MAAM;AACLG,MAAAA,IAAI;AACJJ,MAAAA,UAAU,CAACe,QAAX;AACH,KAVwC,EAUtCH,SAVsC,EAU3B,MAAM;AAChBV,MAAAA,SAAS,GAAGD,UAAU,GAAG,IAAzB;AACH,KAZwC,CAAzC;AAaH,GApCa,CAAd;AAqCH","sources":["./src/app/pages/meeting-create/meeting-create.component.ts","./src/app/pages/meeting-create/meeting-create.component.html","./src/app/pages/meeting-list/meeting-list.component.ts","./src/app/pages/meeting-list/meeting-list.component.html","./src/app/pages/meeting-list/meeting-sortable.directive.ts","./src/app/pages/meeting-list/meeting.service.ts","./src/app/pages/meeting/meeting.module.ts","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\n// import AirDatepicker from 'air-datepicker';\r\n// import localeEn from 'air-datepicker/locale/en';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\n\r\n@Component({\r\n   selector: 'app-meeting-create',\r\n   templateUrl: './meeting-create.component.html',\r\n   styleUrls: ['./meeting-create.component.scss']\r\n})\r\nexport class MeetingCreateComponent implements OnInit, AfterViewInit {\r\n\r\n   meetingForm: FormGroup;\r\n   control: FormArray;\r\n   submitted = false;\r\n   isLoading = false;\r\n   minDate = moment().format('YYYY-MM-DDThh:mm');\r\n   //   @ViewChild('dateTimePiker') dateTimePiker: ElementRef;\r\n\r\n   constructor(private formBuilder: FormBuilder, private _apiService: ApiService, private router: Router, public datepipe: DatePipe) {\r\n\r\n   }\r\n\r\n   ngOnInit(): void {\r\n      this.meetingForm = this.formBuilder.group({\r\n         TOPIC: ['', [Validators.required]],\r\n         REF_NO: [''],\r\n         MEETING_DATE: ['', { validators: [Validators.required, dateValidator()] }],\r\n         // MEETING_DATE2: ['', [Validators.required]],\r\n         MeetingRecipient: this.formBuilder.array([])\r\n      });\r\n      this.addRow();\r\n   }\r\n\r\n   ngAfterViewInit(): void {\r\n      // let formControl = this.meetingForm;\r\n      this.control = this.meetingForm.get('MeetingRecipient') as FormArray;\r\n      //   new AirDatepicker(this.dateTimePiker.nativeElement, {\r\n      //      timepicker: true,\r\n      //      timeFormat: 'hh:mm AA',\r\n      //      locale: localeEn,\r\n      //      onSelect({ date, formattedDate }) {\r\n      //       //   console.log(formattedDate)\r\n      //       //   console.log(formControl.value.MEETING_DATE2)\r\n      //          // 04/27/2022 05:01 PM\r\n      //          // 2022-04-27T17:02\r\n      //       //   formControl.patchValue({ 'MEETING_DATE': moment(formattedDate, 'MM/DD/YYYY HH:mm').format() })\r\n      //       //   formControl.patchValue({ 'MEETING_DATE': moment(formControl.value.MEETING_DATE).format() })\r\n\r\n      //         console.log(moment(formControl.value.MEETING_DATE2, 'YYYY-MM-DD HH:mm').format())\r\n      //         console.log(moment(formControl.value.MEETING_DATE2).toISOString())\r\n      //         console.log(moment(formControl.value.MEETING_DATE2).parseZone().format())\r\n      //         console.log(moment(formControl.value.MEETING_DATE2).local(true).format())\r\n      //         console.log(moment(formControl.value.MEETING_DATE2).parseZone().local(true).format())\r\n      //          console.log(formControl.value.MEETING_DATE)\r\n\r\n      //      }\r\n      //   });\r\n   }\r\n\r\n   initiateForm(): FormGroup {\r\n      return this.formBuilder.group(\r\n         {\r\n            FIRST_NAME: ['', [Validators.required]],\r\n            LAST_NAME: ['', [Validators.required]],\r\n            PHONE: [''],\r\n            EMAIL: ['', [Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$\"), Validators.required]],\r\n         }\r\n      )\r\n   }\r\n\r\n   addRow() {\r\n      const control = this.meetingForm.get('MeetingRecipient') as FormArray;\r\n      control.push(this.initiateForm());\r\n   }\r\n\r\n   deleteRow(index: number) {\r\n      const control = this.meetingForm.get('MeetingRecipient') as FormArray;\r\n      control.removeAt(index);\r\n   }\r\n\r\n   editRow(group: FormGroup) {\r\n      group.get('isEditable').setValue(true);\r\n   }\r\n\r\n   doneRow(group: FormGroup) {\r\n      group.get('isEditable').setValue(false);\r\n   }\r\n\r\n   get getFormControls() {\r\n      const control = this.meetingForm.get('MeetingRecipient') as FormArray;\r\n      return control;\r\n   }\r\n\r\n   submitForm() {\r\n      this.submitted = true;\r\n      this.isLoading = true;\r\n      console.log(this.meetingForm.value)\r\n      if (!this.meetingForm.valid) {\r\n         this.isLoading = false;\r\n         return;\r\n      }\r\n      this.meetingForm.patchValue({ 'MEETING_DATE': moment(this.meetingForm.value.MEETING_DATE).format() })\r\n      // const control = this.meetingForm.get('MeetingRecipient') as FormArray;\r\n      // this.touchedRows = control.controls.filter(row => row.touched).map(row => row.value);\r\n      // console.log(this.touchedRows);\r\n\r\n      // let date = this.datepipe.transform(this.meetingForm.value.MEETING_DATE, 'dd/MM/yyyy');\r\n\r\n      this._apiService.post('InserVCSMeeting', this.meetingForm.value).subscribe(res => {\r\n         this.isLoading = false;\r\n         this.router.navigate(['/meeting'])\r\n      }, err => {\r\n         this.isLoading = false;\r\n      })\r\n   }\r\n}\r\n\r\nfunction dateValidator(): ValidatorFn {\r\n   return (control: AbstractControl): ValidationErrors | null => {\r\n      const value = control.value;\r\n      const date = moment(value).add(1, 'm').isSameOrBefore(moment());\r\n      return date ? { invalidDate: { value: control.value } } : null;\r\n   };\r\n}\r\n","<div class=\"container-fluid\">\r\n   <div class=\"page-title-box d-flex align-items-center justify-content-between pb-0\" style=\"margin-top: -20px;\">\r\n      <div class=\"d-flex align-items-center\">\r\n         <button routerLink=\"/meeting\" type=\"button\" class=\"btn btn-bck\">\r\n            <i class=\"bx bx-chevron-left\"></i>\r\n         </button>\r\n         <h4 class=\"mb-0 font-size-18\">{{'Create New Meeting'}}</h4>\r\n      </div>\r\n\r\n   </div>\r\n   <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n         <div class=\"card\">\r\n            <div class=\"card-body\">\r\n               <p class=\"card-title mb-4\">Fill out the following information!</p>\r\n\r\n               <form (ngSubmit)=\"submitForm()\" [formGroup]=\"meetingForm\">\r\n                  <div class=\"row\">\r\n                     <div class=\"col-5 mb-3\">\r\n                        <label class=\"control-label\">Topic</label>\r\n                        <input [ngClass]=\"{'is-invalid': submitted && meetingForm.controls.TOPIC.errors}\" type=\"text\"\r\n                           formControlName=\"TOPIC\" class=\"form-control\" placeholder=\"Topic\">\r\n\r\n                        <div *ngIf=\"submitted && meetingForm.controls.TOPIC.errors\" class=\"invalid-feedback\">\r\n                           <div *ngIf=\"submitted && meetingForm.controls.TOPIC.errors.required\">Meeting TOPIC is\r\n                              required.\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div class=\"col-3 mb-3\">\r\n                        <label class=\"control-label\">Ref #</label>\r\n                        <input type=\"text\" formControlName=\"REF_NO\" class=\"form-control\" placeholder=\"Ref #\">\r\n                     </div>\r\n\r\n                     <div class=\"col-4 mb-3\">\r\n                        <label class=\"control-label\">Meeting Date</label>\r\n                        <!-- <input [ngClass]=\"{'is-invalid': submitted && meetingForm.controls.MEETING_DATE.errors}\"\r\n                           type=\"text\" class=\"form-control\" placeholder=\"Date\" #dateTimePiker> -->\r\n                        <input [ngClass]=\"{'is-invalid': submitted && meetingForm.controls.MEETING_DATE.errors}\"\r\n                           type=\"datetime-local\" id=\"dateTime\" [min]=\"minDate\" formControlName=\"MEETING_DATE\" class=\"form-control\" placeholder=\"Date\" #dateTimePiker>\r\n                        <div *ngIf=\"submitted && meetingForm.controls.MEETING_DATE.errors\" class=\"invalid-feedback\">\r\n                           <div *ngIf=\"submitted && meetingForm.controls.MEETING_DATE.errors.required\">Meeting date is\r\n                              required.</div>\r\n                           <div *ngIf=\"submitted && meetingForm.controls.MEETING_DATE.errors.invalidDate\">\r\n                              Select time current or above\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"d-flex justify-content-between align-items-center pt-4 pb-2\">\r\n                     <h4 class=\"mb-0\">Recipients</h4>\r\n                     <button type=\"button\" class=\"btn btn-success btn-sm\" (click)=\"addRow()\">\r\n                        Add Recipient\r\n                     </button>\r\n                  </div>\r\n\r\n\r\n                  <div>\r\n\r\n                     <div class=\"table-responsive\">\r\n                        <table class=\"table table-borderless mb-0\">\r\n\r\n                           <thead>\r\n                              <tr>\r\n                                 <th>First Name</th>\r\n                                 <th>Last Name</th>\r\n                                 <th>Email</th>\r\n                                 <th>Phone</th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody formArrayName=\"MeetingRecipient\">\r\n                              <tr *ngFor=\"let group of getFormControls.controls ; let i=index\" [formGroupName]=\"i\">\r\n                                 <td>\r\n                                    <input class=\"form-control\" placeholder=\"First Name\" type=\"text\"\r\n                                       formControlName=\"FIRST_NAME\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && group.controls.FIRST_NAME.errors}\" />\r\n                                    <div *ngIf=\"submitted && group.controls.FIRST_NAME.errors\" class=\"invalid-feedback\">\r\n                                       <span *ngIf=\"group.controls.FIRST_NAME.errors.required\">First\r\n                                          Name is\r\n                                          required.</span>\r\n                                    </div>\r\n                                 </td>\r\n                                 <td>\r\n                                    <input class=\"form-control\" placeholder=\"Last Name\" type=\"text\"\r\n                                       formControlName=\"LAST_NAME\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && group.controls.LAST_NAME.errors}\" />\r\n                                    <div *ngIf=\"submitted && group.controls.LAST_NAME.errors\" class=\"invalid-feedback\">\r\n                                       <span *ngIf=\"group.controls.LAST_NAME.errors.required\">Last Name\r\n                                          is\r\n                                          required.</span>\r\n                                    </div>\r\n                                 </td>\r\n                                 <td>\r\n                                    <input class=\"form-control\" placeholder=\"Email\" type=\"EMAIL\" formControlName=\"EMAIL\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && group.controls.EMAIL.errors}\" />\r\n                                    <div *ngIf=\"submitted && group.controls.EMAIL.errors\" class=\"invalid-feedback\">\r\n                                       <span *ngIf=\"group.controls.EMAIL.errors.pattern\">Email is not valid.</span>\r\n                                    </div>\r\n\r\n                                 </td>\r\n                                 <td>\r\n                                    <input class=\"form-control\" mask=\"0000-0000000\" placeholder=\"03XX-XXXXXXX\"\r\n                                       type=\"tel\" formControlName=\"PHONE\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && group.controls.PHONE.errors}\" />\r\n                                    <div *ngIf=\"submitted && group.controls.PHONE.errors\" class=\"invalid-feedback\">\r\n                                       <span *ngIf=\"group.controls.PHONE.errors.required\">Phone number is\r\n                                          required.</span>\r\n                                       <!-- <span *ngIf=\"group.controls.PHONE.errors.pattern\">Phone number is\r\n                                          not valid.</span> -->\r\n                                    </div>\r\n                                 </td>\r\n                                 <td>\r\n                                       <a *ngIf=\"getFormControls.controls.length > 1\" [routerLink]=\"\"\r\n                                          (click)=\"deleteRow(i)\" style=\"cursor: pointer;\" data-placement=\"bottom\"\r\n                                          title=\"Delete\">\r\n                                          <i class=\"mdi mdi-delete-circle text-danger bx-sm\"></i>\r\n                                       </a>\r\n                                 </td>\r\n                              </tr>\r\n\r\n                           </tbody>\r\n                        </table>\r\n                     </div>\r\n\r\n                  </div>\r\n                  <div class=\"d-flex flex-wrap gap-2 justify-content-end mt-2\">\r\n                     <button type=\"submit\" class=\"btn btn-lg btn-primary\">\r\n                        <ng-container *ngIf=\"!isLoading\">Create</ng-container>\r\n                        <i *ngIf=\"isLoading\" class=\"bx bx-loader bx-spin font-size-16 align-middle me-2\"></i>\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n      <!-- <div *ngIf=\"isEdit\" class=\"col-md-12\">\r\n         <div class=\"card\">\r\n            <div class=\"card-body\">\r\n               <p class=\"card-title mb-4\">Fill out the following information!</p>\r\n\r\n               <form (ngSubmit)=\"editMeeting()\" [formGroup]=\"editMeetingForm\">\r\n                  <div class=\"row\">\r\n\r\n                     <div class=\"col-4 mb-3\">\r\n                        <label class=\"control-label\">Next Meeting Date</label>\r\n                        <input [ngClass]=\"{'is-invalid': submitted && editMeetingForm.controls.NXTMEETINGDT.errors}\"\r\n                           type=\"datetime-local\" id=\"dateTime\" [min]=\"minDate\" formControlName=\"NXTMEETINGDT\"\r\n                           class=\"form-control\" placeholder=\"Date\" #dateTimePiker>\r\n                        <div *ngIf=\"submitted && editMeetingForm.controls.NXTMEETINGDT.errors\" class=\"invalid-feedback\">\r\n                           <div *ngIf=\"submitted && editMeetingForm.controls.NXTMEETINGDT.errors.required\">Meeting date\r\n                              is\r\n                              required.</div>\r\n                           <div *ngIf=\"submitted && editMeetingForm.controls.NXTMEETINGDT.errors.invalidDate\">\r\n                              Select time current or above\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div class=\"col-12 mb-3\">\r\n                        <label class=\"control-label\">Notes</label>\r\n                        <textarea type=\"text\" formControlName=\"NOTES\" class=\"form-control\"\r\n                           placeholder=\"Enter your notes here...\"></textarea>\r\n                     </div>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"d-flex flex-wrap gap-2 justify-content-end mt-2\">\r\n                     <button type=\"submit\" class=\"btn btn-lg btn-warning\">\r\n                        <ng-container *ngIf=\"!isLoading\">Update</ng-container>\r\n                        <i *ngIf=\"isLoading\" class=\"bx bx-loader bx-spin font-size-16 align-middle me-2\"></i>\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div> -->\r\n\r\n   </div>\r\n</div>","import { DecimalPipe } from '@angular/common';\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { MeetingSortableService, SortEvent } from './meeting-sortable.directive';\r\nimport { MeetingService } from './meeting.service';\r\n\r\n@Component({\r\n   selector: 'app-meeting-list',\r\n   templateUrl: './meeting-list.component.html',\r\n   styleUrls: ['./meeting-list.component.scss'],\r\n   providers: [MeetingService, DecimalPipe]\r\n})\r\nexport class MeetingListComponent implements OnInit {\r\n\r\n   meeting$: Observable<any>;\r\n   total$: Observable<number>;\r\n   submitted = false;\r\n   minDate = moment().format('YYYY-MM-DDThh:mm');\r\n   @ViewChildren(MeetingSortableService) headers: QueryList<MeetingSortableService>;\r\n   isLoading: boolean;\r\n   constructor(public service: MeetingService, private formBuilder: FormBuilder, private _apiService: ApiService, private modalService: NgbModal) {\r\n      this.meeting$ = service.meeting$;\r\n      this.total$ = service.total$;\r\n   }\r\n\r\n   ngOnInit(): void {\r\n      // this.onSort({ column: 'MEETING_ID', direction: 'asc' })\r\n   }\r\n\r\n   onSort({ column, direction }: SortEvent) {\r\n      this.headers.forEach(header => {\r\n         if (header.sortable !== column) {\r\n            header.direction = '';\r\n         }\r\n      });\r\n      this.service.sortColumn = column;\r\n      this.service.sortDirection = direction;\r\n   }\r\n   changeValue(i) {\r\n      this.service.hideme[i] = !this.service.hideme[i];\r\n   }\r\n\r\n   getSchedule(table) {\r\n\r\n      // let date = table.MEETING_DATE\r\n      // if (table.FINISHED_DATE && table.NXTMTNG_DT) {\r\n      //   date = table.NXTMTNG_DT\r\n      // }\r\n\r\n      let meeting_date = new Date(table.MEETING_DATE);\r\n      let today = new Date();\r\n\r\n      let Difference_In_Time = meeting_date.getTime() - today.getTime();\r\n      let Difference_In_Days = Math.round(Difference_In_Time / (1000 * 3600 * 24));\r\n\r\n      return Difference_In_Days;\r\n\r\n      //   expiry_date.setDate(expiry_date.getDate() + table.EXPIRY_DAYS);\r\n      //   const current_date = new Date();\r\n      //   let Difference_In_Time = expiry_date.getTime() - current_date.getTime();\r\n      //   let Difference_In_Days = Math.round(Difference_In_Time / (1000 * 3600 * 24));\r\n      //   return (Difference_In_Days < 1 ? 0 : Difference_In_Days);\r\n   }\r\n\r\n   removeMinusSign(num) {\r\n      return Math.abs(num);\r\n   }\r\n   editMeetingForm: FormGroup;\r\n   editMeeting(content, data) {\r\n\r\n      this.editMeetingForm = this.formBuilder.group({\r\n         MEETING_ID: [data.MEETING_ID],\r\n         NXTMTNG_DT: ['', { validators: [Validators.required, dateValidator()] }],\r\n         NOTES: ['']\r\n      })\r\n\r\n      this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n         console.log(`Closed with: ${result}`);\r\n\r\n      }, (reason) => {\r\n         console.log(`Dismissed ${reason}`);\r\n      });\r\n   }\r\n\r\n   submitMeeting(modal) {\r\n      this.submitted = true;\r\n      this.isLoading = true;\r\n      console.log(this.editMeetingForm.value)\r\n      if (!this.editMeetingForm.valid) {\r\n         this.isLoading = false;\r\n         return;\r\n      }\r\n      this.editMeetingForm.patchValue({ 'NXTMTNG_DT': moment(this.editMeetingForm.value.NXTMTNG_DT).format() });\r\n\r\n      this._apiService.put('updateNextVCSMeeting', this.editMeetingForm.value).subscribe(res => {\r\n         this.isLoading = false;\r\n         this.service.getMeeting();\r\n         modal.close('success');\r\n      }, err => {\r\n         this.isLoading = false;\r\n      })\r\n   }\r\n}\r\n\r\nfunction dateValidator(): ValidatorFn {\r\n   return (control: AbstractControl): ValidationErrors | null => {\r\n      const value = control.value;\r\n      const date = moment(value).add(1, 'm').isSameOrBefore(moment());\r\n      return date ? { invalidDate: { value: control.value } } : null;\r\n   };\r\n}\r\n","<div class=\"container-fluid\">\r\n   <div class=\"row\">\r\n      <div class=\"col-12\">\r\n         <div class=\"page-title-box d-flex align-items-center justify-content-between\">\r\n            <h4 class=\"mb-0 font-size-18\">My Meetings</h4>\r\n            <div class=\"page-title-right\">\r\n               <ol class=\"breadcrumb m-0\">\r\n                  <!-- <li class=\"breadcrumb-item active\">Welcome to Digital Insurance Channel</li> -->\r\n               </ol>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n\r\n   <div class=\"card m-0\">\r\n      <div class=\"card-body pb-0\">\r\n         <div class=\"row mb-md-2\">\r\n            <div class=\"col-sm-12 col-md-6\">\r\n               <div class=\"col-sm-12 col-md-6\">\r\n                  <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                     <div class=\"position-relative\">\r\n                        <input type=\"text\" name=\"searchTerm\" class=\"form-control\" aria-controls=\"tickets-table\"\r\n                           placeholder=\"Search...\" [(ngModel)]=\"service.searchTerm\">\r\n                        <i class=\"bx bx-search-alt search-icon\"></i>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-md-6 text-md-end\">\r\n               <button class=\"btn btn-primary w-md btn-rounded mb-2 mr-2\" routerLink=\"create\">\r\n                  Create Meeting\r\n               </button>\r\n            </div>\r\n         </div>\r\n         <div style=\"height: calc(100vh - 327px); overflow-y: auto;\">\r\n            <table id=\"basic-datatable\" class=\"table dt-responsive nowrap\">\r\n               <thead class=\"table-light\">\r\n                  <tr>\r\n                     <!-- <th style=\"padding:0.50rem 0.75rem;width: 95px;\" sortable=\"MEETING_ID\" (sort)=\"onSort($event)\">\r\n                        Meeting ID\r\n                     </th> -->\r\n                     <th style=\"padding:0.50rem 0.75rem;\" sortable=\"TOPIC\" (sort)=\"onSort($event)\">Topic</th>\r\n                     <th style=\"padding:0.50rem 0.75rem;\" sortable=\"REF_NO\" (sort)=\"onSort($event)\">Ref #</th>\r\n                     <th style=\"padding:0.50rem 0.75rem;\" sortable=\"MEETING_DATE\" (sort)=\"onSort($event)\">Meeting date &\r\n                        time\r\n                     </th>\r\n                     <th style=\"padding:0.50rem 0.75rem;\" sortable=\"STATUS\" (sort)=\"onSort($event)\">Status\r\n                     </th>\r\n                     <th style=\"padding:0.50rem 0.75rem;\">Schedule\r\n                     </th>\r\n                     <!-- <th style=\"padding:0.50rem 0.75rem;\" sortable=\"URL\" (sort)=\"onSort($event)\">URL</th> -->\r\n                     <th></th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody *ngFor=\"let table of meeting$ | async;let i=index\">\r\n                  <tr>\r\n                     <!-- <td style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem; width: 95px;\">\r\n                        <ngb-highlight [result]=\"table.MEETING_ID\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                     </td> -->\r\n                     <td style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem;\">\r\n                        <ngb-highlight [result]=\"table.TOPIC\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                     </td>\r\n                     <td style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem;\">\r\n                        <ngb-highlight [result]=\"table.REF_NO ? table.REF_NO : '--'\" [term]=\"service.searchTerm\">\r\n                        </ngb-highlight>\r\n                     </td>\r\n                     <td style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem;\">\r\n                        <ngb-highlight [result]=\"table.MEETING_DATE | date:'medium'\" [term]=\"service.searchTerm\">\r\n                        </ngb-highlight>\r\n                     </td>\r\n                     <td\r\n                        style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem; display: flex; align-items: center;position: relative;\">\r\n                        <ngb-highlight\r\n                           [ngClass]=\" {\r\n                           'bg-success':table.FINISHED_DATE, 'bg-warning':(!table.FINISHED_DATE &&  getSchedule(table) >= 0),'bg-danger': (!table.FINISHED_DATE &&  getSchedule(table) < 0)}\"\r\n                           [result]=\"table.FINISHED_DATE ? 'Completed' : (!table.FINISHED_DATE &&  getSchedule(table) >= 0)?'Pending':'Expired'\"\r\n                           class=\"badge font-size-12 bg-primary\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                        <i *ngIf=\"table.NXTMTNG_DT\" placement=\"top\" container=\"body\"\r\n                           [ngbTooltip]=\"'Upcoming Meeting: '+(table.NXTMTNG_DT | date:'medium')\"\r\n                           class=\"mdi mdi-calendar-clock text-warning font-size-20\"\r\n                           style=\"position: absolute; right: 10px;\"></i>\r\n                        <!-- <ngb-highlight [result]=\"table.STATUS\" class=\"badge font-size-12 bg-primary\"\r\n                           [term]=\"service.searchTerm\"></ngb-highlight> -->\r\n                     </td>\r\n                     <td style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem;\">\r\n                        <a *ngIf=\"getSchedule(table) === 0 && !table.FINISHED_DATE\"\r\n                           [routerLink]=\"['../meet', table.URL]\">Join Meeting</a>\r\n\r\n                        <ngb-highlight *ngIf=\"getSchedule(table) != 0 || table.FINISHED_DATE\"\r\n                           [result]=\"getSchedule(table) > 0 ? 'Meeting in '+getSchedule(table)+' day(s)  ':'--'\"\r\n                           [term]=\"service.searchTerm\" [ngClass]=\" {\r\n                           'text-success':getSchedule(table) > 0 }\"></ngb-highlight>\r\n\r\n                     </td>\r\n                     <td style=\"padding:0.40rem 0.75rem 0.40rem 0.75rem; position: relative;\" align=\"right\">\r\n                        <!-- <i class=\"fas fa-external-link-alt me-3\" style=\"cursor: pointer\" [routerLink]=\"['../meet', table.URL]\"></i> -->\r\n                        <i class=\"mdi mdi-calendar-edit text-warning\"\r\n                           (click)=\"editMeeting(content, table)\"></i>\r\n                        <a *ngIf=\"service.hideme[i]\" style=\"cursor: pointer; margin-right: 25px;\" class=\"font-size-11\"\r\n                           (click)=\"changeValue(i)\">Show details</a>\r\n                        <a *ngIf=\"!service.hideme[i]\" style=\"cursor: pointer; margin-right: 25px;\" class=\"font-size-11\"\r\n                           (click)=\"changeValue(i)\">Hide details</a>\r\n                        <!-- <ngb-highlight [result]=\"table.URL\" [term]=\"service.searchTerm\"></ngb-highlight> -->\r\n                     </td>\r\n                     <!-- <td align=\"center\">\r\n                        <a class=\"expand-row\" (click)=\"changeValue(i)\">\r\n                           +\r\n                        </a>\r\n                     </td> -->\r\n                  </tr>\r\n\r\n                  <tr *ngIf=\"!service.hideme[i]\">\r\n                     <!-- <td align=\"center\"> </td> -->\r\n                     <td colspan=\"6\">\r\n                        <div class=\"card\" style=\"border-radius: 0.5rem !important; background: #eff2f7bf;\">\r\n                           <div class=\"card-body\">\r\n\r\n                              <div *ngIf=\"table.NXTMTNG_DT\" class=\"badge-soft-success mtng_date\">\r\n                                 <p class=\"font-size-12\" style=\"color: #152f3c;\">Next Meeting:</p>\r\n                                 <p class=\"font-size-14\">{{table.NXTMTNG_DT | date:'medium'}}</p>\r\n                              </div>\r\n\r\n                              <caption class=\"pt-0\" style=\"width: max-content;\">List of Recipients</caption>\r\n                              <table class=\"table table-sm mb-0\">\r\n\r\n                                 <thead style=\"z-index: 0;\">\r\n                                    <tr>\r\n                                       <th>First Name</th>\r\n                                       <th>Last Name</th>\r\n                                       <th>Phone</th>\r\n                                       <th>Email</th>\r\n\r\n                                    </tr>\r\n                                 </thead>\r\n                                 <tbody>\r\n                                    <tr *ngFor=\"let item of table.MeetingRecipient; let i = index\">\r\n                                       <td>{{item.FIRST_NAME}}</td>\r\n                                       <td>{{item.LAST_NAME}}</td>\r\n                                       <td>{{item.PHONE}}</td>\r\n                                       <td>{{item.EMAIL}}</td>\r\n                                    </tr>\r\n                                 </tbody>\r\n                              </table>\r\n\r\n                              <div *ngIf=\"table.NOTES\">\r\n                                 <caption style=\"width: max-content; padding-bottom: 0;\">Notes</caption>\r\n                                 <p style=\"font-weight: 500;\">{{table.NOTES || '--'}}</p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <!-- End table -->\r\n         <div class=\"row justify-content-md-between align-items-md-center mt-2\">\r\n            <div class=\"col-sm-12 col-md-5 mb-4\">\r\n               <div class=\"dataTables_info\" id=\"tickets-table_info\" role=\"status\" aria-live=\"polite\">\r\n                  Showing\r\n                  {{service.startIndex + 1}} to\r\n                  {{service.endIndex}} of {{service.totalRecords}}\r\n                  entries\r\n               </div>\r\n            </div>\r\n            <!-- Pagination -->\r\n            <div class=\"col-sm-12 col-md-5\">\r\n               <div class=\"text-md-right float-md-end pagination-rounded\">\r\n                  <ngb-pagination class=\"pagination\" [collectionSize]=\"total$ | async\" [(page)]=\"service.page\"\r\n                     [pageSize]=\"service.pageSize\">\r\n                  </ngb-pagination>\r\n               </div>\r\n            </div>\r\n            <!-- End Pagination -->\r\n         </div>\r\n      </div>\r\n   </div>\r\n</div>\r\n\r\n<!-- Edit Modal -->\r\n\r\n<ng-template #content let-modal>\r\n   <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Edit Meeting</h4>\r\n      <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('corss click')\"></button>\r\n   </div>\r\n   <div class=\"modal-body\">\r\n      <form [formGroup]=\"editMeetingForm\">\r\n         <div class=\"row\">\r\n\r\n            <div class=\"col-12\">\r\n               <label class=\"control-label\">Next Meeting Date</label>\r\n               <input [ngClass]=\"{'is-invalid': submitted && editMeetingForm.controls.NXTMTNG_DT.errors}\"\r\n                  type=\"datetime-local\" id=\"dateTime\" [min]=\"minDate\" formControlName=\"NXTMTNG_DT\" class=\"form-control\"\r\n                  placeholder=\"Date\" #dateTimePiker>\r\n               <div *ngIf=\"submitted && editMeetingForm.controls.NXTMTNG_DT.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"submitted && editMeetingForm.controls.NXTMTNG_DT.errors.required\">Meeting date\r\n                     is\r\n                     required.</div>\r\n                  <div *ngIf=\"submitted && editMeetingForm.controls.NXTMTNG_DT.errors.invalidDate\">\r\n                     Select time current or above\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 mt-3\">\r\n               <label class=\"control-label\">Notes</label>\r\n               <textarea type=\"text\" formControlName=\"NOTES\" class=\"form-control\"\r\n                  placeholder=\"Enter your notes here...\"></textarea>\r\n            </div>\r\n\r\n         </div>\r\n      </form>\r\n   </div>\r\n   <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-warning\" (click)=\"submitMeeting(modal)\">\r\n         <ng-container *ngIf=\"!isLoading\">Update</ng-container>\r\n         <i *ngIf=\"isLoading\" class=\"bx bx-loader bx-spin font-size-16 align-middle me-2\"></i>\r\n      </button>\r\n   </div>\r\n</ng-template>\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n   column: string;\r\n   direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n   selector: 'th[sortable]',\r\n   host: {\r\n      '[class.asc]': 'direction === \"asc\"',\r\n      '[class.desc]': 'direction === \"desc\"',\r\n      '(click)': 'rotate()'\r\n   }\r\n})\r\n\r\nexport class MeetingSortableService {\r\n\r\n   constructor() { }\r\n   @Input() sortable: string;\r\n   @Input() direction: SortDirection = '';\r\n   @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n   rotate() {\r\n      this.direction = rotate[this.direction];\r\n      this.sort.emit({ column: this.sortable, direction: this.direction });\r\n   }\r\n}\r\n","import { Injectable, PipeTransform } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, delay, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { SearchResult } from './meeting.model';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { SortDirection } from './meeting-sortable.directive';\r\n\r\ninterface State {\r\n   page: number;\r\n   pageSize: number;\r\n   searchTerm: string;\r\n   sortColumn: string;\r\n   sortDirection: SortDirection;\r\n   startIndex: number;\r\n   endIndex: number;\r\n   totalRecords: number;\r\n}\r\n\r\nfunction compare(v1, v2) {\r\n   return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n}\r\n\r\nfunction sort(meeting: any[], column: string, direction: string): any[] {\r\n   if (direction === '') {\r\n      return meeting;\r\n   } else {\r\n      return [...meeting].sort((a, b) => {\r\n         const res = compare(a[column], b[column]);\r\n         return direction === 'asc' ? res : -res;\r\n      });\r\n   }\r\n}\r\n\r\nfunction matches(meeting: any, term: string, pipe: PipeTransform) {\r\n   return meeting.MEETING_ID.toLowerCase().includes(term)\r\n      || meeting.TOPIC.toLowerCase().includes(term.toLowerCase())\r\n      || meeting.REF_NO.toLowerCase().includes(term.toLowerCase())\r\n      || meeting.MEETING_DATE.toLowerCase().includes(term.toLowerCase())\r\n      || meeting.USER_ID.toLowerCase().includes(term)\r\n}\r\n\r\n@Injectable({\r\n   providedIn: 'root'\r\n})\r\n\r\nexport class MeetingService {\r\n   private _loading$ = new BehaviorSubject<boolean>(true);\r\n   private _search$ = new Subject<void>();\r\n   private _meeting$ = new BehaviorSubject<any[]>([]);\r\n   private _total$ = new BehaviorSubject<number>(0);\r\n   private _state: State = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: '',\r\n      startIndex: 1,\r\n      endIndex: 10,\r\n      totalRecords: 0\r\n   };\r\n   meetingData: any;\r\n   hideme: any[] = [];\r\n\r\n   constructor(private pipe: DecimalPipe, private _apiService: ApiService) {\r\n      this.getMeeting();\r\n      this._search$.pipe(\r\n         tap(() => this._loading$.next(true)),\r\n         debounceTime(200),\r\n         switchMap(() => this._search()),\r\n         delay(200),\r\n         tap(() => this._loading$.next(false))\r\n      ).subscribe(result => {\r\n         this._meeting$.next(result.meeting);\r\n         this._total$.next(result.total);\r\n      });\r\n   }\r\n\r\n   async getMeeting(): Promise<void> {\r\n      this._apiService.get('getVCSMeeting').subscribe(res => {\r\n         this.meetingData = res;\r\n         for (let i = 0; i <= this.meetingData.length; i++) {\r\n            this.hideme.push(true);\r\n            // if (i == 2) {\r\n            //    let date = new Date(this.meetingData[i].CREATED_DATE);\r\n            //    this.meetingData[i].CREATED_DATE = date.setDate(date.getDate() + 7);\r\n            // }\r\n         }\r\n         this.meetingData.sort((a, b) => {\r\n            const res = compare(a.CREATED_DATE, b.CREATED_DATE);\r\n            return -res;\r\n         });\r\n         this._search$.next();\r\n      });\r\n\r\n   }\r\n\r\n   get meeting$() { return this._meeting$.asObservable(); }\r\n   get total$() { return this._total$.asObservable(); }\r\n   get loading$() { return this._loading$.asObservable(); }\r\n   get page() { return this._state.page; }\r\n   get pageSize() { return this._state.pageSize; }\r\n   get searchTerm() { return this._state.searchTerm; }\r\n   get startIndex() { return this._state.startIndex; }\r\n   get endIndex() { return this._state.endIndex; }\r\n   get totalRecords() { return this._state.totalRecords; }\r\n\r\n   set page(page: number) { this._set({ page }); }\r\n   set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n   set startIndex(startIndex: number) { this._set({ startIndex }); }\r\n   set endIndex(endIndex: number) { this._set({ endIndex }); }\r\n   set totalRecords(totalRecords: number) { this._set({ totalRecords }); }\r\n   set searchTerm(searchTerm: string) { this._set({ searchTerm }); }\r\n   set sortColumn(sortColumn: string) { this._set({ sortColumn }); }\r\n   set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n   private _set(patch: Partial<State>) {\r\n      Object.assign(this._state, patch);\r\n      this._search$.next();\r\n   }\r\n\r\n   private _search(): Observable<SearchResult> {\r\n      const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n      let meeting = sort(this.meetingData, sortColumn, sortDirection);\r\n\r\n      meeting = meeting.filter(table => matches(table, searchTerm, this.pipe));\r\n      const total = meeting.length;\r\n\r\n      this.totalRecords = meeting.length;\r\n      this._state.startIndex = (page - 1) * this.pageSize;\r\n      this._state.endIndex = (page - 1) * this.pageSize + this.pageSize;\r\n      if (this.endIndex > this.totalRecords) {\r\n         this.endIndex = this.totalRecords;\r\n      }\r\n      meeting = meeting.slice(this._state.startIndex, this._state.endIndex);\r\n      return of(\r\n         { meeting, total }\r\n      );\r\n   }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgbTooltipModule, NgbPaginationModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { ArchwizardModule } from 'angular-archwizard';\r\nimport { MeetingListComponent } from '../meeting-list/meeting-list.component';\r\nimport { MeetingComponent } from './meeting.component';\r\nimport { MeetingSortableService } from '../meeting-list/meeting-sortable.directive';\r\nimport { MeetingCreateComponent } from '../meeting-create/meeting-create.component';\r\n\r\nconst routes: Routes = [\r\n   { path: '', component: MeetingListComponent },\r\n   { path: 'create', component: MeetingCreateComponent },\r\n   // { path: ':id', component: MeetingCreateComponent },\r\n];\r\n\r\n@NgModule({\r\n   declarations: [MeetingListComponent, MeetingComponent, MeetingSortableService, MeetingCreateComponent],\r\n   imports: [\r\n      CommonModule,\r\n      RouterModule.forChild(routes),\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      NgbTooltipModule,\r\n      NgbPaginationModule,\r\n      NgbTypeaheadModule,\r\n      ArchwizardModule,\r\n      DropzoneModule,\r\n   ],\r\n   providers: [DatePipe]\r\n})\r\nexport class MeetingModule { }\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n"],"names":["asyncScheduler","operate","createOperatorSubscriber","debounceTime","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","value","next","emitWhenIdle","targetTime","now","schedule","undefined","add","subscribe","complete"],"sourceRoot":"webpack:///"}